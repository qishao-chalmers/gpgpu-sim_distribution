# This is a basic workflow to help you get started with Actions

name: Short-Tests

# Controls when the workflow will run
on:
  push:
    branches-ignore:
      - "gh-readonly-queue**"
  merge_group:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-TITANV:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/accel-sim/accel-sim-framework:ubuntu-24.04-cuda-12.8
      env:
        CONFIG: TITANV
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Run Simulation
        run: /bin/bash $GITHUB_WORKSPACE/short-tests.sh

  build-TITANV-LOCALXBAR:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/accel-sim/accel-sim-framework:ubuntu-24.04-cuda-12.8
      env:
        CONFIG: TITANV-LOCALXBAR
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Run Simulation
        run: /bin/bash $GITHUB_WORKSPACE/short-tests.sh

  build-QV100:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/accel-sim/accel-sim-framework:ubuntu-24.04-cuda-12.8
      env:
        CONFIG: QV100
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Run Simulation
        run: /bin/bash $GITHUB_WORKSPACE/short-tests.sh

  build-2060:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/accel-sim/accel-sim-framework:ubuntu-24.04-cuda-12.8
      env:
        CONFIG: RTX2060
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Run Simulation
        run: /bin/bash $GITHUB_WORKSPACE/short-tests.sh

  build-3070:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/accel-sim/accel-sim-framework:ubuntu-24.04-cuda-12.8
      env:
        CONFIG: RTX3070
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Run Simulation
        run: /bin/bash $GITHUB_WORKSPACE/short-tests.sh
  #format-code:
  #  if: github.event_name == 'pull_request'
  #  runs-on: tgrogers-raid
  #  needs: [build-TITANV, build-TITANV-LOCALXBAR, build-QV100, build-2060, build-3070]
  #  steps:
  #    - uses: actions/checkout@v4
  #      with:
  #        ref: ${{github.event.pull_request.head.ref}}
  #        repository: ${{github.event.pull_request.head.repo.full_name}}
  #        ssh-key: ''

  #    - name: Run clang-format
  #      run: |
  #        git config user.name "purdue-jenkins"
  #        git config user.email "purdue-jenkins@users.noreply.github.com"
  #        git remote set-url origin git@github.com:${{github.event.pull_request.head.repo.full_name}}
  #        git remote -v
  #        /bin/bash ./format-code.sh
  #        if git status --untracked-files=no | grep -q "nothing to commit"; then echo "No changes to commit."; else git commit -a -m "Automated Format"; git push; fi
